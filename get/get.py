import psutil
import requests
import platform
import ctypes
import psutil

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• RAM
def get_memory_info():
    memory = psutil.virtual_memory()
    total_memory = memory.total / (1024 ** 3)  # ‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô GB
    available_memory = memory.available / (1024 ** 3)  # ‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô GB
    used_memory = memory.used / (1024 ** 3)  # ‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô GB
    return f"‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total_memory:.2f} GB, ‡πÉ‡∏ä‡πâ‡πÑ‡∏õ: {used_memory:.2f} GB, ‡∏ß‡πà‡∏≤‡∏á: {available_memory:.2f} GB"

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà
def get_battery_info():
    battery = psutil.sensors_battery()
    if battery:
        battery_percent = battery.percent
        plugged = battery.power_plugged
        remaining_time = battery.secsleft / 60 if battery.secsleft != psutil.POWER_TIME_UNLIMITED else None
        
        status = "‡∏ä‡∏≤‡∏£‡πå‡∏à‡πÄ‡∏ï‡πá‡∏°" if plugged else "‡∏ä‡∏≤‡∏£‡πå‡∏à‡πÑ‡∏°‡πà‡πÄ‡∏ï‡πá‡∏°"
        
        # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≤‡∏£‡πå‡∏à‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
        time_left = f"{remaining_time:.0f} ‡∏ô‡∏≤‡∏ó‡∏µ" if remaining_time else "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏î‡πâ"
        
        return f"‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà: {battery_percent}% ({status}), ‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≤‡∏£‡πå‡∏à‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {time_left}"
    
    return "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• CPU
def get_cpu_info():
    cpu_count = psutil.cpu_count(logical=False)  # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á CPU
    cpu_freq = psutil.cpu_freq().current  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏Ç‡∏≠‡∏á CPU (MHz)
    return f"CPU: {cpu_count} ‡∏Ñ‡∏≠‡∏£‡πå, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà {cpu_freq} MHz"

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• GPU
def get_gpu_info():
    # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ GPU ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞
    try:
        gpu_info = subprocess.check_output("nvidia-smi --query-gpu=name --format=csv,noheader", shell=True)
        return f"GPU: {gpu_info.decode().strip()}"
    except:
        return "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• GPU ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡πÑ‡∏î‡πâ"

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å IP
def get_ip_info():
    try:
        ip_info = requests.get("https://ipinfo.io/json").json()
        ip = ip_info.get("ip", "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö IP")
        city = ip_info.get("city", "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡πÄ‡∏°‡∏∑‡∏≠‡∏á")
        region = ip_info.get("region", "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ")
        country = ip_info.get("country", "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®")
        return ip, city, region, country
    except:
        return "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
def get_device_info():
    try:
        ip, city, region, country = get_ip_info()
        user_agent = requests.get("https://httpbin.org/user-agent").json().get("user-agent", "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå")
        device_model = platform.system()  # ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
        os, browser = parse_device_details(user_agent)
        screen_resolution = get_screen_resolution()
        connection_speed = get_connection_speed()

        memory_info = get_memory_info()
        battery_info = get_battery_info()
        cpu_info = get_cpu_info()
        gpu_info = get_gpu_info()

        return {
            "ip": ip,
            "location": f"{city}, {region}, {country}",
            "device": user_agent,
            "device_model": device_model,
            "os": os,
            "browser": browser,
            "screen_resolution": screen_resolution,
            "connection_speed": connection_speed,
            "memory_info": memory_info,
            "battery_info": battery_info,
            "cpu_info": cpu_info,
            "gpu_info": gpu_info
        }
    except Exception as e:
        return {
            "ip": "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            "location": "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            "device": "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            "device_model": "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            "os": "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            "browser": "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            "screen_resolution": "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            "connection_speed": "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            "memory_info": "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            "battery_info": "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            "cpu_info": "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
            "gpu_info": "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
        }








def print_welcome_message(username, device_info):
    current_time = get_current_time()
    print(Fore.GREEN + Style.BRIGHT + f"\n‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö {username}!\n")
    print(Fore.YELLOW + "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚úÖ\n")
    print(Fore.CYAN + f"üì° IP: {device_info['ip']}")
    print(Fore.CYAN + f"üåç ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: {device_info['location']}")
    print(Fore.CYAN + f"üíª ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå: {device_info['device']}")
    print(Fore.CYAN + f"üì± ‡∏£‡∏∏‡πà‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå: {device_info['device_model']}")
    print(Fore.CYAN + f"üîß ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£: {device_info['os']}")
    print(Fore.CYAN + f"üåê ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå: {device_info['browser']}")
    print(Fore.CYAN + f"üñ•Ô∏è ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠: {device_info['screen_resolution']}")
    print(Fore.CYAN + f"‚ö° ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠: {device_info['connection_speed']}")